version: 2.1
# Generic shared rule to build with Maven.
shared_maven: &shared_maven
  working_directory: ~/repo
  environment:
    JVM_OPTS: -Xmx1g
    TERM: dumb
    GOVERSION: 17.4.0
  steps:
    - checkout

    - restore_cache:
        key: maven-{{ checksum "pom.xml" }}

    - run:
        name: Show coords
        command: |
          echo pipeline.id << pipeline.id >>
          echo pipeline.number << pipeline.number >>
          echo pipeline.git.tag << pipeline.git.tag >>
          echo pipeline.git.revision << pipeline.git.revision >>

    - run:
        name: Maven Get Dependencies
        command: mvn dependency:go-offline --fail-never

    - save_cache:
        paths:
          - ~/.m2
        key: maven-{{ checksum "pom.xml" }}

    - run:
        name: Maven Build and test
        command: mvn -Dgo.version=${GOVERSION} clean package

    - persist_to_workspace:
        root: ./target
        paths:
          - go-maven-poller-plugin.jar
          - .

    - store_artifacts:
        path: ./target/go-maven-poller-plugin.jar

# Test the plugin jar with a gocd-server docker container.
# Reads the plugin info via REST in JSON and checks some
# mandatory fields.
shared_gocd_server_integration: &shared_gocd_server_integration
  machine: true
  steps:
    - run:
        name: Start docker container with a GoCD server
        command: |
          docker run --name gocd-server -d -p8153:8153 -e "GOCD_PLUGIN_INSTALL_go-maven-poller=https://bintray.com/sfuhrm/go-maven-poller/download_file?file_path=go-maven-poller-plugin-latest.jar" gocd/gocd-server:v20.10.0

    - run:
        name: Wait and get the plugin info via API
        command: |
          for (( i = 0; i < 180 ; i++ )); do
            # busy loop sleep
            sleep 1
            echo -n "."
            # download API
            curl > plugin_info.json --silent -H 'Accept: application/vnd.go.cd.v7+json' http://localhost:8153/go/api/admin/plugin_info/maven-repo || continue
            # break if success
            grep ARTIFACT_ID plugin_info.json && break
          done

    - run:
        name: Kill the docker container
        command: |
          docker container kill gocd-server

    - store_artifacts:
        path: ./plugin_info.json

     - run:
        name: Test the JSON document for expected values
        command: |
          grep ARTIFACT_ID plugin_info.json || exit 1
          grep PACKAGING plugin_info.json || exit 1
          grep POLL_VERSION_TO plugin_info.json || exit 1
          grep REPO_URL plugin_info.json || exit 1
          grep /go-working-dir/plugins/external/go-maven-poller.jar plugin_info.json || exit 1

jobs:
  # Builds with JDK 8.
  jdk8:
    docker:
      - image: circleci/openjdk:8-jdk-buster
    <<: *shared_maven

  # Builds with JDK 11.
  jdk11:
    docker:
      - image: circleci/openjdk:11-jdk-buster
    <<: *shared_maven

  # Builds with JDK 13.
  jdk13:
    docker:
      - image: circleci/openjdk:13-jdk-buster
    <<: *shared_maven

  # Builds with JDK 14.
  jdk14:
    docker:
      - image: circleci/openjdk:14-jdk-buster
    <<: *shared_maven

  # Builds with JDK 15.
  jdk15:
    docker:
      - image: circleci/openjdk:15-jdk-buster
    <<: *shared_maven

  # Builds with a newer GoCD API jar to check
  # build time breaks.
  gocd_api_20_10_0:
    docker:
      - image: circleci/openjdk:11-jdk-buster
    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb
      GOVERSION: 20.10.0
    <<: *shared_maven

  # Uploads the test code coverage information to Codacy.
  coverage:
    docker:
      - image: circleci/openjdk:11-jdk-buster
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          key: maven-{{ checksum "pom.xml" }}
      - run:
          name: Maven Get Dependencies
          command: mvn dependency:go-offline --fail-never
      - run:
          name: Maven Build and test
          command: mvn clean test jacoco:report
      - run:
          name: Codacy Coverage upload
          command: bash <(curl -Ls https://coverage.codacy.com/get.sh)

  # Uploads a latest build to JFROGs BinTray.
  upload_jfrog_latest:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb
    steps:
      - checkout

      - attach_workspace:
        # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - run:
          name: Delete latest checksums
          working_directory: /tmp/workspace
          command: |
            ~/repo/.circleci/bintray-delete-version.sh latest

      - run:
          name: Upload and publish latest to JFrog BinTray
          working_directory: /tmp/workspace
          command: |
            ~/repo/.circleci/bintray-upload-version.sh latest

      - store_artifacts:
          path: /tmp/workspace/go-maven-poller-plugin.jar.md5

      - store_artifacts:
          path: /tmp/workspace/go-maven-poller-plugin.jar.sha256

  # Uploads a release tag to JFROGs BinTray.
  upload_jfrog_release:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb
    steps:
      - checkout

      - attach_workspace:
        # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - run:
          name: Upload and publish latest to JFrog BinTray
          working_directory: /tmp/workspace
          command: |
            ~/repo/.circleci/bintray-upload-version.sh $(echo "<< pipeline.git.tag >>" | cut -d"-" -f4)

  # Builds with JDK 15.
  jdk15:
    docker:
      - image: circleci/openjdk:15-jdk-buster
    <<: *shared_maven

  gocd_server_integration_20_10_0:
    environment:
      GOVERSION: v20.10.0
    <<: *shared_gocd_server_integration

  gocd_server_integration_18_1_0:
    environment:
      GOVERSION: v18.1.0
    <<: *shared_gocd_server_integration

  gocd_server_integration_17_6_0:
    environment:
      GOVERSION: v17.6.0
    <<: *shared_gocd_server_integration

workflows:
  version: 2
  work:
    jobs:
      - jdk8:
          filters:
            tags:
              only: /^go-maven-poller-[0-9.]*$/
      - jdk11
      - jdk13
      - jdk14
      - jdk15
      - coverage
      - gocd_api_20_10_0
      - upload_jfrog_latest:
          requires:
            - jdk8
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /^master$/
      - upload_jfrog_release:
          requires:
            - jdk8
          filters:
            tags:
              only: /^go-maven-poller-[0-9.]*$/
            branches:
              ignore: /.*/
      - gocd_server_integration_17_6_0:
          requires:
            - upload_jfrog_latest
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /^master$/
      - gocd_server_integration_18_1_0:
          requires:
            - upload_jfrog_latest
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /^master$/
      - gocd_server_integration_20_10_0:
          requires:
            - upload_jfrog_latest
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /^master$/
